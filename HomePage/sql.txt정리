
create table member_grade (
	grade_code	number(7)		not null,
	grade_name	varchar2 (20 char)	default 'friends',
	point_rate	number(5,2)		not null,
    constraint member_grade_pk_grade_code primary key(grade_code)
);  

    insert into member_grade values(0,'',0);
    insert into member_grade values(1, 'FRIENDS', 0.02);
    insert into member_grade values(2, 'SILVER', 0.03);
    insert into member_grade values(3, 'GOLD', 0.04);
    insert into member_grade values(4, 'PLATINUM', 0.05);   

create table member (
	member_id	varchar2(20 char)		not null,
	grade_code	number(7)		not null,
	member_name	varchar2 (20 char)		not null,
	member_email	varchar2 (50 char)		not null,
	password	varchar2(60 char)		not null,
	member_tel	varchar2 (20 char)	 not null,
	member_profile	varchar2 (300 char)	default 'defaultprofile.png'	not null,
	member_point	number(7) default 0,
	joinday	date	default sysdate	not null,
	birthday	date		not null,
    constraint member_pk_member_id primary key(member_id),	
    constraint member_fk_grade_code foreign key(grade_code) references member_grade(grade_code)
);
   

create table delivery (
	dno	number(7)		not null,
	member_id	varchar2(20 char)		not null,
	zip_code number(6)	null,
	receiver_name	varchar2 (20 char)		not null,
	delivery_address	varchar2 (100 char)		not null,
	receiver_tel	varchar2 (20 char)		not null,
    delivery_request varchar2 (50 char) default '조심히 와주세요' null,
    default_address number(1) default '1' null,
    delivery_name varchar2 (10 char) not null,
    constraint delivery_pk_dno primary key(dno),
    constraint delivery_fk_member_id foreign key(member_id) references member(member_id)
);

create table orders(
	ono	number(7)		not null,
	member_id	varchar2 (20 char)		not null,
	dno	number(7)		not null,
	order_date	date	default sysdate	not null,
	order_price	number(7)		not null,
	payment	varchar2 (50 char)	not null,
	point_earn	number(5)		not null,
	orders_buyer varchar2 (20 char) not null,
    constraint orders_pk_ono primary key(ono),
    constraint orders_fk_dno foreign key(dno) references delivery(dno),
    constraint orders_fk_member_id foreign key(member_id) references member(member_id)
);

create table category (
    category_code number(3) not null,
    category_name varchar2(30) not null,
    category_parent number(3),
    constraint category_pk_category_code primary key(category_code),
    constraint category_fk_category_parent foreign key(category_parent) references category(category_code)
);

  insert into category(category_code, category_name) values(100, '도서');
  insert into category values(110, '소설', 100);
  insert into category values(111, '판타지소설', 110);
  insert into category values(112, '호러/공포소설', 110);
  insert into category values(113, '드라마/영화소설', 110);
  insert into category values(114, 'SF/과학소설', 110);
  insert into category values(115, '로맨스소설', 110);
  insert into category values(120, '만화', 100);
  insert into category values(121, '웹툰', 120);
  insert into category values(122, '요리만화', 120);
  insert into category values(123, '액션만화', 120);
  insert into category values(124, '학원만화', 120);
  insert into category values(130, '참고도서', 100);
  insert into category values(131, '중/고등참고서', 130);
  insert into category values(132, '토익교재', 130);
  insert into category values(133, 'EBS교재', 130);

create table book (
	bno	number(7)		not null,
    category_code number(3) not null,
	book_title	varchar2 (50 char)		not null,
    book_image varchar2 (300 char) not null,    
	book_intro clob,
    book_content clob not null,
	publish_date	date		not null,
	book_price	number(7)		not null,
	stock	number(4)		not null,
	translator	varchar2 (30 char)		null,
	publisher_name	varchar2 (30 char)		not null,
	author_name	varchar2 (30 char)		not null,
    constraint book_pk_bno primary key(bno),
    constraint book_fk_category_code foreign key(category_code) references category(category_code)
);

CREATE TABLE order_details (
    odno NUMBER(7) NOT NULL,
    bno NUMBER(7) NOT NULL,
    ono NUMBER(7) NOT NULL,
    order_count NUMBER(3) NOT NULL,
    order_total NUMBER(7) NOT NULL,
    book_title VARCHAR2 (50 CHAR) NOT NULL,
    order_status VARCHAR2 (100 CHAR) DEFAULT '주문이 완료되었습니다.' NOT NULL,
    book_image varchar2 (300 char) not null,
    CONSTRAINT order_details_pk_odno PRIMARY KEY(odno),
    CONSTRAINT order_details_fk_bno FOREIGN KEY(bno) REFERENCES book(bno),
    CONSTRAINT order_details_fk_ono FOREIGN KEY(ono) REFERENCES orders(ono)
);
    
create table book_review (
	rno	number(7)		not null,
	review_content	clob		not null,
	review_writer	varchar2 (30 char)		not null,
	review_date	date	default sysdate	not null,
	bno	number(7)		not null,
	odno	number(7)		not null,
    member_id varchar2 (20 char) not null,
    constraint book_review_pk_rno primary key(rno),
    constraint book_review_fk_bno foreign key(bno) references book(bno),
    constraint book_review_fk_odno foreign key(odno) references order_details(odno),
    constraint book_review_fk_member_id foreign key(member_id) references member(member_id)
);

create table cart (
	cno	number(7)		not null,
	bno	number(7)		not null,
	member_id	varchar2 (20 char)		not null,
	cart_count	number(3)	default 1	not null,
    constraint cart_pk_cno primary key(cno),
    constraint cart_fk_bno foreign key(bno) references book(bno),
    constraint cart_fk_member_id foreign key(member_id) references member(member_id)
);

    
create table inquiry (
	inno	number(7)		not null,
	member_id	varchar2 (20 char)		not null,
	content	clob		not null,
	inquiry_type	varchar2 (30 char)		not null,
    constraint inquiry_pk_inno primary key(inno),
    constraint inquiry_fk_member_id foreign key(member_id) references member(member_id)
);

create table notice (
	nno	number(7)		not null,
	notice_title	varchar2 (30 char)		not null,
	notice_content	clob		not null,
	notice_writer	varchar2 (20 char)	default 'Pageflow 관리자' not null,
	notice_writeday	date default sysdate not null,
    constraint notice_pk_nno primary key(nno)
);

  CREATE SEQUENCE notice_seq; 
  CREATE SEQUENCE book_seq;
  CREATE SEQUENCE book_review_seq ;
  CREATE SEQUENCE orders_seq;
  CREATE SEQUENCE inquiry_seq;
  CREATE SEQUENCE member_grade_seq;
  CREATE SEQUENCE cart_seq;
  CREATE SEQUENCE order_details_seq;
  CREATE SEQUENCE delivery_seq; 